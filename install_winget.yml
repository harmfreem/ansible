---
- name: Install Winget (Windows Package Manager)
  hosts: windows # Переконайтеся, що це відповідає назві вашої групи Windows у inventory
  gather_facts: yes

  vars:
    # URL для останнього стабільного випуску Winget (MSIXBUNDLE) з GitHub.
    # *** ВАЖЛИВО: ЗАВЖДИ ПЕРЕВІРЯЙТЕ АКТУАЛЬНІСТЬ ЦЬОГО ПОСИЛАННЯ! ***
    # Відвідайте: https://github.com/microsoft/winget-cli/releases
    # На момент 23 червня 2025 року, найновіша стабільна версія - 1.10.390.
    # Рекомендовано використовувати її, якщо немає особливих вимог до старої версії.
    # Якщо ви бажаєте версію 1.10.390, використовуйте:
    # winget_release_url: "https://github.com/microsoft/winget-cli/releases/download/v1.10.390/Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.msixbundle"
    #
    # Якщо вам потрібна саме версія 1.7.10861, використовуйте:
    winget_release_url: "https://github.com/microsoft/winget-cli/releases/download/v1.7.10861/Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.msixbundle"
    winget_installer_path: "C:\\Windows\\Temp\\Microsoft.DesktopAppInstaller.msixbundle"

    # URL для фреймворку Microsoft.UI.Xaml.2.8.
    # *** ВАЖЛИВО: ЗАВЖДИ ПЕРЕВІРЯЙТЕ АКТУАЛЬНІСТЬ ЦЬОГО ЛІНКУ! ***
    # Шукайте на: https://github.com/microsoft/WindowsAppSDK/releases
    # Потрібна версія 8.2310.30001.0 або новіша (файл .appx або .appxbundle).
    # Посилання на NuGet нижче перенаправляє на потрібний файл.
    microsoft_ui_xaml_url: "https://www.nuget.org/api/v2/package/Microsoft.UI.Xaml/2.8.6"
    microsoft_ui_xaml_path: "C:\\Windows\\Temp\\Microsoft.UI.Xaml.2.8.appx"


  tasks:
    - name: Check if Winget is already installed and accessible
      # Перевіряємо наявність 'winget.exe' у PATH.
      # ignore_errors дозволяє продовжити, навіть якщо команду не знайдено.
      win_shell: "Get-Command winget.exe -ErrorAction SilentlyContinue"
      register: winget_check
      ignore_errors: true

    - name: Download Winget MSIXBUNDLE if not already installed
      # Завантажуємо інсталятор Winget з GitHub.
      # force: no запобігає повторному завантаженню, якщо файл вже існує.
      win_get_url:
        url: "{{ winget_release_url }}"
        dest: "{{ winget_installer_path }}"
        force: no
      when: winget_check.failed # Виконуємо, лише якщо Winget не було знайдено.

    - name: Download Microsoft.UI.Xaml.2.8 framework if needed
      # Цей крок завантажить необхідну залежність (Microsoft.UI.Xaml).
      win_get_url:
        url: "{{ microsoft_ui_xaml_url }}"
        dest: "{{ microsoft_ui_xaml_path }}"
        force: no
      when: winget_check.failed # Завантажувати лише, якщо Winget ще не встановлено
    
    - name: Install Microsoft.UI.Xaml.2.8 framework
      # Цей крок встановить фреймворк перед Winget.
      win_shell: |
        Add-AppxPackage -Path "{{ microsoft_ui_xaml_path }}" -ForceUpdateFromAnyVersion
      args:
        executable: powershell.exe
      when: winget_check.failed # Встановлювати лише, якщо Winget ще не встановлено

    - name: Install Winget using PowerShell (Add-AppxPackage)
      win_shell: |
        Add-AppxPackage -Path "{{ winget_installer_path }}" -ForceUpdateFromAnyVersion
      args:
        executable: powershell.exe
      when: winget_check.failed # Виконуємо, лише якщо Winget не було знайдено.

    - name: Verify Winget installation by checking version
      # Повторно перевіряємо встановлення, отримуючи версію Winget.
      win_shell: "winget --version"
      register: winget_version_check
      changed_when: false # Ця команда не змінює стан системи.
      when: winget_check.failed or winget_version_check.rc != 0

    - name: Display Winget version if successfully installed
      # Виводимо версію Winget, якщо перевірка пройшла успішно.
      ansible.builtin.debug:
        msg: "Winget installed successfully. Version: {{ winget_version_check.stdout | default('N/A') }}"
      when: winget_version_check.rc == 0

    - name: 'Note: Rebooting terminal/session might be required for Winget to be in PATH'
      # Нагадування про необхідність перезапуску сесії PowerShell/CMD.
      ansible.builtin.debug:
        msg: "Winget has been installed. You might need to close and reopen your PowerShell/CMD session for 'winget' command to be recognized in PATH."
      when: winget_check.failed
