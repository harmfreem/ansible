---
- name: Advanced Winget Installation & Diagnostics (No Reboot)
  hosts: windows
  gather_facts: yes

  vars:
    winget_release_url: "https://github.com/microsoft/winget-cli/releases/download/v1.7.10861/Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.msixbundle"
    winget_installer_path: "C:\\Windows\\Temp\\Microsoft.DesktopAppInstaller.msixbundle"

    microsoft_ui_xaml_url: "https://github.com/microsoft/microsoft-ui-xaml/releases/download/v2.8.6/Microsoft.UI.Xaml.2.8.x64.appx"
    microsoft_ui_xaml_path: "C:\\Windows\\Temp\\Microsoft.UI.Xaml.2.8.x64.appx"

    microsoft_vclibs_url: "https://aka.ms/Microsoft.VCLibs.x64.14.00.Desktop.appx"
    microsoft_vclibs_path: "C:\\Windows\\Temp\\Microsoft.VCLibs.140.00.UWPDesktop.appx"


  tasks:
    - name: Check if Winget is already installed and accessible (Initial check)
      win_shell: "Get-Command winget.exe -ErrorAction SilentlyContinue"
      register: winget_initial_check
      ignore_errors: true

    - name: Ensure target directory exists for downloads
      win_file:
        path: "C:\\Windows\\Temp\\"
        state: directory

    - name: Download Winget MSIXBUNDLE
      win_get_url:
        url: "{{ winget_release_url }}"
        dest: "{{ winget_installer_path }}"
        force: yes # Завжди завантажувати, щоб переконатися, що файл не пошкоджений
      when: winget_initial_check.failed

    - name: Download Microsoft.VCLibs.140.00.UWPDesktop framework
      win_get_url:
        url: "{{ microsoft_vclibs_url }}"
        dest: "{{ microsoft_vclibs_path }}"
        force: yes
      when: winget_initial_check.failed
    
    - name: Install Microsoft.VCLibs.140.00.UWPDesktop framework
      win_shell: |
        Add-AppxPackage -Path "{{ microsoft_vclibs_path }}" -ForceUpdateFromAnyVersion
      args:
        executable: powershell.exe
      ignore_errors: true
      when: winget_initial_check.failed

    - name: Download Microsoft.UI.Xaml.2.8 framework
      win_get_url:
        url: "{{ microsoft_ui_xaml_url }}"
        dest: "{{ microsoft_ui_xaml_path }}"
        force: yes
      when: winget_initial_check.failed
    
    - name: Install Microsoft.UI.Xaml.2.8 framework
      win_shell: |
        Add-AppxPackage -Path "{{ microsoft_ui_xaml_path }}" -ForceUpdateFromAnyVersion
      args:
        executable: powershell.exe
      ignore_errors: true
      when: winget_initial_check.failed

    - name: Reinstall Winget using PowerShell (Add-AppxPackage)
      win_shell: |
        Add-AppxPackage -Path "{{ winget_installer_path }}" -ForceUpdateFromAnyVersion
      args:
        executable: powershell.exe
      register: winget_install_attempt
      ignore_errors: true 
      when: winget_initial_check.failed

    - name: Get detailed AppxPackage log for Microsoft.DesktopAppInstaller
      win_shell: |
        $package = Get-AppxPackage -Name "Microsoft.DesktopAppInstaller" -ErrorAction SilentlyContinue
        if ($package) {
            Get-AppxLog -Package $package.PackageFullName | Format-List -Force
        } else {
            Write-Output "Microsoft.DesktopAppInstaller package not found or could not retrieve logs."
        }
      args:
        executable: powershell.exe
      register: appinstaller_log_output
      ignore_errors: true

    - name: Display AppxPackage Log for Microsoft.DesktopAppInstaller
      ansible.builtin.debug:
        msg: "Full AppxPackage Log for Winget (look for 'Fail', 'Error', 'HRESULT'):\n{{ appinstaller_log_output.stdout }}"
      when: appinstaller_log_output.stdout is defined and appinstaller_log_output.stdout | length > 0

    - name: Check final status of Microsoft.DesktopAppInstaller package
      win_shell: "Get-AppxPackage -Name 'Microsoft.DesktopAppInstaller'"
      register: final_appinstaller_status
      ignore_errors: true

    - name: Display final Microsoft.DesktopAppInstaller package status
      ansible.builtin.debug:
        msg: "Final Microsoft.DesktopAppInstaller package status:\n{{ final_appinstaller_status.stdout }}"
      when: final_appinstaller_status.stdout is defined and final_appinstaller_status.stdout | length > 0

    - name: Verify Winget installation by checking version after all attempts (without reboot)
      win_shell: "Get-Command winget.exe -ErrorAction SilentlyContinue"
      register: winget_final_check
      changed_when: false
      ignore_errors: true

    - name: Report final Winget status
      ansible.builtin.debug:
        msg: "Final Winget status: {{ 'Accessible' if winget_final_check.rc == 0 else 'Not recognized in PATH' }}"

    - name: 'Important Note: Manual investigation or reboot might still be necessary'
      ansible.builtin.debug:
        msg: "WARNING: If Winget still shows 'not recognized', there is a deeper issue on the Windows machine preventing AppX package registration, or a reboot is required for PATH changes to apply. Review the 'Full AppxPackage Log for Winget' output above for specific error codes or messages. Manual troubleshooting (including a reboot) is highly recommended."
      when: winget_final_check.rc != 0
