---
- name: Install Winget with all dependencies on Windows Server 2019
  hosts: windows
  gather_facts: false
  vars:
    temp_dir: "C:\\Temp\\winget"
    vclibs_url: "https://aka.ms/Microsoft.VCLibs.x64.14.00.Desktop.appx"
    xaml_nuget_url: "https://www.nuget.org/api/v2/package/Microsoft.UI.Xaml/2.7.3"
    winget_url: "https://aka.ms/getwinget"

  tasks:

    - name: Create temp folder
      win_file:
        path: "{{ temp_dir }}"
        state: directory

    - name: Download Microsoft.VCLibs.x64
      win_get_url:
        url: "{{ vclibs_url }}"
        dest: "{{ temp_dir }}\\Microsoft.VCLibs.x64.14.00.Desktop.appx"

    - name: Download Microsoft.UI.Xaml nupkg
      win_get_url:
        url: "{{ xaml_nuget_url }}"
        dest: "{{ temp_dir }}\\Microsoft.UI.Xaml.2.7.3.nupkg"

    - name: Unzip Microsoft.UI.Xaml nupkg via PowerShell
      win_command: >
        powershell.exe -ExecutionPolicy Bypass -Command "Expand-Archive -Path '{{ temp_dir }}\\Microsoft.UI.Xaml.2.7.3.nupkg' -DestinationPath '{{ temp_dir }}\\xaml' -Force"

    - name: Find .appx inside extracted XAML package
      win_find:
        paths: "{{ temp_dir }}\\xaml"
        patterns: "*.appx"
      register: xaml_appx_files

    - name: Set UI.Xaml appx path
      set_fact:
        xaml_appx_path: "{{ xaml_appx_files.files[0].path }}"

    - name: Download App Installer (winget)
      win_get_url:
        url: "{{ winget_url }}"
        dest: "{{ temp_dir }}\\AppInstaller.msixbundle"

    - name: Install Microsoft.VCLibs.x64
      win_command: >
        powershell.exe -ExecutionPolicy Bypass -Command "Add-AppxPackage -Path '{{ temp_dir }}\\Microsoft.VCLibs.x64.14.00.Desktop.appx'"

    - name: Install Microsoft.UI.Xaml
      win_command: >
        powershell.exe -ExecutionPolicy Bypass -Command "Add-AppxPackage -Path '{{ xaml_appx_path }}'"

    - name: Install winget (App Installer)
      win_command: >
        powershell.exe -ExecutionPolicy Bypass -Command "Add-AppxPackage -Path '{{ temp_dir }}\\AppInstaller.msixbundle'"

    - name: Check winget version
      win_command: winget --version
      register: winget_version
      ignore_errors: true

    - name: Show winget version
      debug:
        msg: "{{ winget_version.stdout | default('‚ùå Winget installation failed') }}"
